{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"2e956a9f-89d1-5dd1-8fe5-a81f7b14c2d7","excerpt":"🧐 왜 특정 계정으로 commit 하게 되었을까? 주로 로컬에서 개발하면, 처음 git global로 설정한 계정으로 계속 commit 하게 된다. 그래서 계속 어떤 계정으로 commit 할지 고민하지 않고 git을 사용하다가, 공용 서버에서 특정 프로젝트를 내 계정으로 commit 해야하는 일이 생겼다. 따라서 공용 서버에서 내가 원하는 계정으로 commit 하고 push 할 수 있는 설정을 찾아보게 되었다. ⬇️ git 계정 설정 및 1️⃣ 일회성으로 특정 계정으로 commit 하기 공용 서버에서 config 설정을 할 수 없을 경우, 일회성으로만 특정 계정을 사용하고 싶은 경우 2️⃣ 특정 프로젝트에 특정 계정 사용하기 특정 프로젝트 폴더로 이동 후, 아래 명령어 사용 3️⃣ 시스템 전체에서 특정 계정 사용하기 👁️‍🗨️ git 설정 확인 🧐 왜 특정 계정으로 commit 하게 되었을까? ⬇️ git 계정 설정 및 1️⃣ 일회성으로 특정 계정으로 commit 하기 2️⃣ 특정 프로젝트에 특정 계정 사용하…","frontmatter":{"categories":"git","title":"[Git] 특정 계정으로 설정 or commit 하기","date":"April 21, 2022"},"fields":{"slug":"/git/account/"}}},{"node":{"id":"6c694ee9-bb7b-5ff3-bc9b-c47834b7ac1f","excerpt":"window에 rsync 설치하는 방법 window에서 git bash에 rsync 설치 Rsync란? 원격으로 파일과 디렉토리를 동기화하기 위해 사용하는 툴이다. 나는 로컬에서 개발한 후 서버에 배포할 때 Rsync를 사용하려 했다. window에는 Rsync가 설치되어있지 않아 git bash에 직접 설치해야하는 상황이었다.\r\n하지만 window git bash에 Rsync를 설치하는 건 그리 간단하지 않았다. Window git bash에서 Rsync 사용하기 전제 조건으로 Git 버전 2.28.0 이상이어야 한다. 사용법 window Git과 호환되는 rsync 패키지 다운로드하기 https://repo.msys2.org/msys/x86_64/rsync-3.2.3-1-x86_64.pkg.tar.zst 다운로드한다. rsync 패키지 압축해제하기 1에서 다운로드한 패키지는 ZStandard 압축 알고리즘을 사용한다. rsync 패키지를 압축해제하려면 zstd를 사용해야한다. …","frontmatter":{"categories":"window git","title":"window에 rsync 설치하는 방법","date":"February 09, 2022"},"fields":{"slug":"/window/window_rsync/"}}},{"node":{"id":"f163c5eb-9eae-5901-84b8-804c97f02a65","excerpt":"Unity 설치 에러 유니티 설치 중 Microsoft Visual Studio Community 2019 설치 실패 유니티 설치를 하는 도중 모듈 설치에서 Microsoft Visual Studio Community 2019 설치를 실패했다. 시도한 방법1 -> 실패 컴퓨터를 다시시작해서 다시 Microsoft Visual Studio Community 2019 모듈을 설치했지만 똑같이 설치 했다. 시도한 방법2 -> 성공 Visual Studio Installer를 열어서 확인해 보니 설치를 완료하기 위해선 다시시작해야한다는 버튼이 있었다. 을 눌러서 다시시작했다. 다시시작한 후 Unity의 모듈을 확인해보니 Microsoft Visual Studio Community 2019 모듈이 설치되어있었다. Unity 설치 에러 시도한 방법1 -> 실패 시도한 방법2 -> 성공","frontmatter":{"categories":"Unity Error","title":"[Unity] 설치 에러","date":"February 06, 2022"},"fields":{"slug":"/unity/install-error/"}}},{"node":{"id":"8360efc0-2fbe-5eb7-9e8a-d70c8ec5a061","excerpt":"1. 그리디(Greedy) 알고리즘 현재 상황에서 지금 당장 좋은 것만 고르는 방법  위의 그림과 같이 그리디 알고리즘은 를 찾을 수 없을 가능성이 많다. 따라서 그리디 알고리즘은 사전에 외우고 있지 않아도 풀 수 있지만 그리디 외 다른 알고리즘으로 풀어야 더 효율적인 문제들도 많으니 어떤 문제에서 그리디를 사용할지 정확히 알아야한다. 최적 해가 되는 조건 탐욕 선택 속성: 이전 단계의 선택이 다음 단계의 선택과 완전히 무관 최적 부분 구조: 문제의 최적 해가 부분 문제 최적 해의 모임으로 구성 문제에서 , 와 같은 기준이 있으면 그리디를 생각해봐야한다. 예를 들어 거스름돈 문제 가 있다. 🤑 거스름돈 문제 <거스름돈을 거슬러줄 때, 거슬러 줄 동전의 최소 개수를 구하는 것.> 풀이 방법은  부터 최대한 많이 거슬러주는 것이다. 따라서 화폐의 종류가 K개라고 하면 화폐의 종류만큼 반복해야하므로 시간 복잡도는 O(K) 이다. 앞에서 그리디 알고리즘을 설명한 것과 같이 그리디 알고리즘…","frontmatter":{"categories":"알고리즘 이론","title":"그리디 알고리즘 이론","date":"January 24, 2022"},"fields":{"slug":"/algorithm/greedy/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"julie","bio":{"role":"개발자","description":["데이터에 관심있는","능동적으로 일하는","발전하고 싶은"],"thumbnail":"myEmoji.png"},"social":{"github":"https://github.com/KimMinJeong05","linkedIn":"https://www.linkedin.com/in/%EB%AF%BC%EC%A0%95-%EA%B9%80-491652227/","email":"minjeong.kim512@gmail.com"}}}}},"pageContext":{}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437","3350743975"]}